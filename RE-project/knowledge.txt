需求工程基础

定义：需求工程是软件工程的一个重要阶段，涉及需求获取、分析、验证和管理。它的目的是确保系统的最终产品能够满足用户和业务的需求，避免在开发后期出现返工和成本增加的问题。

主要活动：
- 需求获取：通过多种方法与利益相关者沟通，了解他们的需求。
- 需求分析：对收集到的需求进行整理、分类和优先级排序，以确保其明确且可实现。
- 需求文档编写：将分析后的需求以规范的格式记录下来，形成正式的需求文档。
- 需求验证与确认：确保所记录的需求是准确的，且得到了利益相关者的认可。
- 需求管理：对需求进行持续的跟踪和管理，确保在项目生命周期中能够应对变更和更新。

需求获取方法
- 访谈：与利益相关者进行一对一或小组访谈，以深入了解他们的需求、期望和痛点。这种方法能收集到丰富的定性数据。
- 问卷调查：设计结构化或半结构化的问卷，以系统化地收集用户需求。这种方法适合大规模用户的反馈收集。
- 观察法：在实际工作环境中观察用户的行为，了解他们如何使用现有系统，识别潜在的改进需求。
- 工作坊：组织多方利益相关者共同讨论需求，利用头脑风暴等技术，以促进创意的碰撞和需求的共识。

基于视角的阅读法强调从不同的利益相关者视角出发，理解和分析需求。这种方法包括：
- 用户视角：了解最终用户的需求和体验，确保系统满足他们的期望。
- 开发者视角：关注实现的可行性和技术限制，确保需求是可开发的。
- 业务视角：从业务目标出发，确保需求与战略目标一致，支持业务价值实现。

需求分类
- 功能需求：描述系统必须执行的具体功能，如“用户可以注册账户”。
- 非功能需求：描述系统的性能、可用性、安全性等要求，如“系统响应时间应小于2秒”或“系统应具备99.9%的可用性”。

需求提取的不同阶段
1. 需求识别：初步接触利益相关者，了解他们的需求和期望。
2. 需求分析：对收集到的需求进行整理和分类，识别关键需求和优先级。
3. 需求文档编写：编写详细的需求文档，将需求以结构化的形式记录下来。
4. 需求验证：与利益相关者确认需求的准确性和完整性，确保所有需求得到认可。

需求提取的注意点
- 沟通清晰：确保与利益相关者沟通时使用简单明了的语言，避免专业术语造成的误解。
- 多样化方法：结合多种需求获取方法，以全面理解用户需求。
- 持续反馈：在需求提取过程中，保持与利益相关者的持续互动，及时获取反馈。
- 记录详细：确保所有需求和讨论内容都有详细记录，以便后续参考和验证。
- 灵活应变：对需求变更保持开放态度，适应变化，确保最终产品满足用户需求。

需求文档
- 需求规格说明书（SRS）：详细描述所有需求的文档，包括功能需求、非功能需求、约束条件等。它是开发和测试的重要依据。
- 用户故事：以用户为中心的需求描述方式，通常采用“作为一个[角色]，我想要[目标]，以便于[益处]”的格式，便于敏捷开发团队理解和实现需求。

需求验证
- 检查：对需求文档进行审查，以确保其逻辑性、一致性和完整性，通常由团队成员或外部专家进行。
- 原型测试：使用原型（低保真或高保真）来验证需求是否满足用户期望，帮助用户更直观地理解需求。

需求变更管理
- 变更请求：记录和管理需求变更的流程，确保所有变更经过正式的评审和批准。
- 影响分析：评估需求变更对项目的影响，包括时间、成本和资源的变化，以便做出合理的决策。

工具与技术
- 需求管理工具：如 JIRA、Confluence、IBM Rational DOORS 等，这些工具帮助团队跟踪需求状态，管理变更和协作。
- 建模语言：使用 UML、SysML 等建模语言来可视化需求和系统设计，提高沟通效率。

案例研究
提供成功的需求工程实例分析，帮助理解实际应用。通过案例分析，团队可以学习到如何处理复杂需求、应对挑战以及最佳实践。

领域特定知识
针对特定行业（如金融、医疗、教育）的需求工程实践。不同领域可能有其独特的需求和合规性要求，理解这些背景知识有助于更好地进行需求分析。

机器学习与自然语言处理
- 需求提取技术：利用 NLP 从文档中自动提取需求，提升需求获取效率，减少人工工作量。
- 知识图谱：构建需求与相关信息之间的关系，以便于更好地理解需求之间的依赖和影响，促进更全面的需求分析。

需求提取格式
视角：需求：描述：目标：关键要素：